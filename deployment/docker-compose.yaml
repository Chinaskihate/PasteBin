services:
  db:
    container_name: pastebin-db
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - shared_network
  pg-admin:
    container_name: pastebin-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - db
    volumes:
      - pg-admin:/var/lib/pgadmin4/data
    ports:
      - "5050:80"
    networks:
      - shared_network
  text-api:
    container_name: pastebin-text-api
    build:
      context: ..
      dockerfile: PasteBin.TextAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:5190;https://+:7190
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${DEV_CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-certificate.pfx
    ports:
      - "5190:5190"
      - "7190:7190"
    depends_on:
      - db
      - minio
      - redis
      - url-generator
    restart: always
    volumes:
      - ../https-certificate.pfx:/https/https-certificate.pfx
    networks:
      - shared_network
  url-generator:
    container_name: pastebin-url-generator
    build:
      context: ..
      dockerfile: PasteBin.UrlGeneratorService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - ASPNETCORE_URLS=http://+:5195;https://+:7195
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${DEV_CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-certificate.pfx
    ports:
      - "5195:5195"
      - "7195:7195"
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - ../https-certificate.pfx:/https/https-certificate.pfx
    networks:
      - shared_network
  minio:
    container_name: pastebin-minio
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ADMIN_LOGIN}
      - MINIO_ROOT_PASSWORD=${MINIO_ADMIN_PASSWORD}
      - MINIO_REGION=${MINIO_REGION}
      - MINIO_REGION_NAME=${MINIO_REGION}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - shared_network
  redis:
    container_name: pastebin-redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - shared_network
    volumes:
      - redis-data:/data
  redisinsight:
    container_name: pastebin-redisinsight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - shared_network
  vault:
    container_name: pastebin-vault
    image: hashicorp/vault:latest
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN_ID}
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: http://127.0.0.1:8200
    env_file: .env
    ports:
      - "8200:8200"
    volumes:
      - vault-data:/vault/data
      - ./vault-init.sh:/vault/config/vault-init.sh
    command: /bin/sh -c "/vault/config/vault-init.sh"
    cap_add:
      - IPC_LOCK
    networks:
      - shared_network
volumes:
  db:
  pg-admin:
  minio-data:
  redis-data:
  vault-data:
networks:
  shared_network: